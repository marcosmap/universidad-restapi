//Carrera contabilidad = new Carrera(null, "Contabilidad", 30, 3);
        //Carrera contabilidad = new Carrera(null, "Matematicas", 60, 4);
        //System.out.println(carreraDao.guardar(contabilidad).toString());

        /*Direccion direccion = new Direccion("Andador de la brisa", "29", "54943", "DEPTO1", "PISO 2", "Ciudad de México");
        Persona alumno = new Alumno(null, "Marcos", "Arreguin", "DNI", direccion);
        Persona personaGuardada = alumnoDAO.guardar(alumno);
        System.out.println(personaGuardada.toString());*/

        //System.out.println(carreraDao.buscarPorId(3).toString());

        /*List<Persona> listaPersonas = (List<Persona>) alumnoDAO.buscarTodos();
        listaPersonas.forEach(System.out::println);*/


  ================================


  /*Persona empleado = new Empleado(null, "Jorge", "Arreguin", "DNI2", new Direccion("calle 1", "1", "54943", "depto 1", "piso 2", "Ciudad de México"), new BigDecimal(25000), TipoEmpleado.ADMINISTRATIVO);
          System.out.println(empleadoDAO.guardar(empleado).toString());*/

          /* Aula aula1 = new Aula(null, 1, "10x15", 50, Pizarron.PIZARRA_BLANCA);
          System.out.println(aulaDAO.guardar(aula1).toString()); */

          /*Pabellon pabellon1 = new Pabellon(null, 75.0, "Pabellon 2", new Direccion("calle 1", "numero 1", "12345", "depto 2", "piso 2", "Ciudad de Mexico"));
          System.out.println(pabellonDAO.guardar(pabellon1).toString());*/

          /* Profesor profesor1 = new Profesor(null, "Marcos", "Arreguin", "DNI1", new Direccion("calle 1", "1", "54943", "depto 1", "piso 2", "Ciudad de México"), new BigDecimal(25000));
          System.out.println(profesorDAO.guardar(profesor1).toString()); */

          /* Profesor profesor1 = new Profesor(null, "Martha", "Perez", "DNI6", new Direccion("brisa", "29", "54943", "depto 7", "piso 4", "Ciudad Labor"), new BigDecimal(12000));
          Set<Carrera> carreras =  new HashSet<>();
          carreras.add(carreraDao.buscarPorId(6).get());
          profesor1.setCarreras(carreras);
          System.out.println(profesorDAO.guardar(profesor1).toString()); */

          /* Carrera carrera1 = new Carrera(null, "Programacion I", 48, 4);
          Set<Profesor> profesores = new HashSet<>();
          profesores.add(profesor1);
          carrera1.setProfesores(profesores);
          System.out.println(carreraDao.guardar(carrera1).toString()); */

          // carreraDao.buscarCarrerasPorProfesorNombreYApellido("Marcos", "Arreguin").forEach(System.out::println);

          // empleadoDAO.findEmpleadoByTipoEmpleado(TipoEmpleado.ADMINISTRATIVO).forEach(System.out::println);

          //profesorDAO.findProfesoresByCarrera("Matematicas").forEach(System.out::println);
          //profesorDAO.buscarTodos().forEach(System.out::println);


           /* aulaDAO.findByPizarron(Pizarron.PIZARRA_BLANCA).forEach(System.out::println);
           aulaDAO.findAulasByPabellonNombre("Pabellon 2").forEach(System.out::println);
           System.out.println(aulaDAO.findByNumeroAula(1).toString());*/

           // pabellonDAO.findPabellonesByDireccionLocalidad("Ciudad de Mexico").forEach(System.out::println);
           // System.out.println(pabellonDAO.findPabellonesByNombreContains("Pabellon").toString());


           /* if (carrera.getCantidadAnios() <= 0)
               throw  new BadRequestException("El campo cantidadAnios debe ser mayor a cero");

           if (carrera.getCantidadMaterias() <= 0)
               throw  new BadRequestException("El campo cantidadMaterias debe ser mayor a cero"); */


               /* carreraDao.guardar(new Carrera(null, "Ingeniería en Computación", 48, 4));
                       carreraDao.guardar(new Carrera(null, "Contabilidad", 36, 3));
                       carreraDao.guardar(new Carrera(null, "Qímico Farmacobiólogo", 60, 5));
                       carreraDao.guardar(new Carrera(null, "Actuaría", 55, 4));
                       carreraDao.guardar(new Carrera(null, "Medicina", 62, 5)); */